version: 2
jobs:
  build:
    working_directory: ~/mern-starter
    docker:
      - image: circleci/node:11
    steps:
      - checkout
      - run:
          name: update-npm
          command: 'sudo npm install -g npm@5'
      - restore_cache:
          key: dependency-cache-{{ checksum "package.json" }}
      - run:
          name: install-npm-wee
          command: npm install
      - save_cache:
          key: dependency-cache-{{ checksum "package.json" }}
          paths:
            - ./node_modules
      - run:
          name: test
          command: npm run test:coverage
      - run:
          name: e2e
          command: npm run test:e2e
#      - run:
#          name: code-coverage
#          command: 'jest src --coverage --coverageReporters=text-lcov | coveralls'
#      - store_artifacts:
#          path: coverage
      - store_artifacts:
          path: coverage
#          prefix: coverage
      - store_test_results:
          path: test-results

  deploy:
    working_directory: ~/mern-starter
      docker:
          - image: circleci/node:11
      steps:
        - checkout
        - run:
            name: update-npm
            command: 'sudo npm install -g npm@5'
        - restore_cache:
            key: dependency-cache-{{ checksum "package.json" }}
        - run:
            name: install-npm-wee
            command: npm install
        - save_cache:
            key: dependency-cache-{{ checksum "package.json" }}
            paths:
              - ./node_modules
        - run:
            name: test
            command: npm run test:coverage
        - run:
            name: Authenticate with registry
            command: echo "//registry.npmjs.org/:_authToken=$npm_TOKEN" > ~/repo/.npmrc
        - run:
            name: Publish package
            command: npm publish
        #      - run:
        #          name: code-coverage
        #          command: 'jest src --coverage --coverageReporters=text-lcov | coveralls'
        #      - store_artifacts:
        #          path: coverage
        - store_artifacts:
            path: build
        #          prefix: coverage
#        - store_test_results:
#            path: test-results

workflows:
  version: 2
  test_all:
    jobs:
      - test_latest_node

  test-build-deploy:
    jobs:
      - test
      - deploy

