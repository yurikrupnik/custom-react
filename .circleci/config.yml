version: 2.1

defaults: &defaults
  working_directory: ~/tmp
  docker:
    - image: circleci/node:11

jobs:
  build:
    <<: *defaults
    steps:
      - checkout
      - run:
          name: update-npm
          command: 'sudo npm install -g npm@5'
      - restore_cache:
          key: dependency-cache-{{ checksum "package.json" }}
      - run:
          name: install-npm-wee
          command: npm install
      - save_cache:
          key: dependency-cache-{{ checksum "package.json" }}
          paths:
            - ./node_modules
      - run:
          name: test
          command: npm run test:coverage
      - run:
          name: e2e
          command: npm run test:e2e
      #      - run:
      #          name: code-coverage
      #          command: 'jest src --coverage --coverageReporters=text-lcov | coveralls'
      #      - store_artifacts:
      #          path: coverage
      - store_artifacts:
          path: coverage
      #          prefix: coverage
      - store_test_results:
          path: test-results

  test:
    <<: *defaults
    steps:
      - checkout
      - run:
          name: update-npm
          command: 'sudo npm install -g npm@5'
      - restore_cache:
          key: dependency-cache-{{ checksum "package.json" }}
      - run:
          name: install-npm-wee
          command: npm install
      - save_cache:
          key: dependency-cache-{{ checksum "package.json" }}
          paths:
            - ./node_modules
      - run:
          name: test
          command: npm run test

  deploy:
    <<: *defaults
    steps:
      - checkout
      - run:
          name: update-npm
          command: 'sudo npm install -g npm@5'
      - restore_cache:
          key: dependency-cache-{{ checksum "package.json" }}
      - run:
          name: install-npm-wee
          command: npm install
      - save_cache:
          key: dependency-cache-{{ checksum "package.json" }}
          paths:
            - ./node_modules
      - run:
          name: test
          command: npm run build
      - run:
          name: Authenticate with registry
          command: echo "//registry.npmjs.org/:_authToken=$npm_TOKEN" > /tmp/.npmrc
      - run:
          name: Publish package
          command: npm publish
#      - store_artifacts:
#          path: build


workflows:
  version: 2.1
#  test_all:
#    jobs:
#      - test
#      - build

  test-build-deploy:
    jobs:
      - test
      - build
      - deploy
        filters
          tags:
            only: /^v.*/
          branches:
            only: master
